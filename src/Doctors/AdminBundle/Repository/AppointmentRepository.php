<?php

namespace Doctors\AdminBundle\Repository;

/**
 * AppointmentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AppointmentRepository extends \Doctrine\ORM\EntityRepository
{
    /*public function findConfirmedAppointmentsEvaluations()
    {
        $qb =$this->createQueryBuilder('a')
            ->innerJoin(e.appointment, 'app', 'WITH', 'app.id = e.appointment' )
            ->addSelect('app');
        return $qb->getQuery()->getResult();
    }*/

    public function getAppointmentNumbers()
    {
        return $this->createQueryBuilder('a')
            ->select("COUNT(a)")
            ->getQuery()
            ->getSinglescalarResult();
    }

    public function getConfirmedAppointmentNumbers()
    {
        return $this->createQueryBuilder('a')
            ->select("COUNT(a)")
            ->where('a.status = :status')
            ->setParameter('status', 'مؤكد')
            ->getQuery()
            ->getSinglescalarResult();
    }

    public function getUnConfirmedAppointmentNumbers()
    {
        return $this->createQueryBuilder('a')
            ->select("COUNT(a)")
            ->where('a.status = :status')
            ->setParameter('status', 'مرفوض')
            ->getQuery()
            ->getSinglescalarResult();
    }

    public function getExceededAppointmentNumbers()
    {
        return $this->createQueryBuilder('a')
            ->select("COUNT(a)")
            ->where('a.status = :status')
            ->setParameter('status', 'منته')
            ->getQuery()
            ->getSinglescalarResult();
    }

    public function getWaitingAppointmentNumbers()
    {
        return $this->createQueryBuilder('a')
            ->select("COUNT(a)")
            ->where('a.status = :status')
            ->setParameter('status', 'معلق')
            ->getQuery()
            ->getSinglescalarResult();
    }


    public function findCorrespendingAppointment($dateRDV, $doctor_id)
    {
        $query = $this->_em->createQuery(
            "SELECT a.appointment FROM DoctorsAdminBundle:Appointment a WHERE a.doctor = :doctor AND SUBSTRING(a.appointment,1,10) = :dateAppointment AND a.status=:status" );
        $query->setParameter('doctor', $doctor_id);
        $query->setParameter('dateAppointment', $dateRDV);
        $query->setParameter('status', "مؤكد");
        return $query->getResult();
    }

    public function findAppointmentsDate($wantedDate)
    {
        $query = $this->_em->createQuery(
            "SELECT a.appointment, IDENTITY (a.user) from DoctorsAdminBundle:Appointment a WHERE SUBSTRING(a.appointment,1,10)=:correspondingDate AND a.status=:status"
        );
        $query->setParameter('correspondingDate', $wantedDate);
        $query->setParameter('status', "مؤكد");
        return $query->getResult();
    }
    
}

